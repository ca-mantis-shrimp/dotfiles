@document.meta
title: index
description: 
authors: root
categories: 
created: 2023-04-05
updated: 2023-04-07
version: 1.0.0
@end
This is the configuration Neorg workspace. This workspace is extra special because it will be the site of an experiment.

We are going to attempt something I have wanted to try but have never felt like I had the tooling required.

Specifically, we are going to leverage the tangling feature of neorg to actually write the various configuration files needed to keep the system running.

We have gotten to the point where the code is rather concise, but it would take allot of context to understand what is going on in each file and how each one connects with the other.

This is where tangling comes in. These neorg files will actually generate the data that we expect to use throught this work.

As far as the structure goes I'm still tinkering with it but for right now I think there will be a norg file for every normal file unless they are rather small so I can ensure that everything is kept tidy

* Chezmoi
  The software that has enabled all of this is Chezmoi, a dotfile manager that can give users the ability to have a single configuration with minor edits to accomodate different OSs as well as different needs for different machines.

  While this wont be the main place we talk about the inner workings of Chezmoi, I will leave that to the {:$knowledge_base/Applications/Chezmoi/index:}[Chezmoi Knowledge Files]

Instead, here we are going to define our chezmoi files and explain why we have made the decisions we did

** Git Credentials
   Starting with something small, we have the git credentials file

   #tangle gitCredentials.tmpl
   @code template
   {{- if eq .chezmoi.hostname "USMINDARBURGES1" }}
   https://darburgess:{{ onepasswordRead "op://work/work_pat_token/password" }}@github.com
   {{else}}
   https://ca-mantis-shrimp:{{ onepasswordRead "op://Personal/personal_github_pat_token/password" }}@github.com
   {{ end }}
   @end
   - First, we should note that we are using a template to check if we are on our work computer (you just need to know that that is my work computer's hostname)
   -- Therefore, when I am on my computer it will leverage the 1password CLI to look up the specific work PAT token for my work github account
   - Meanwhile, if we aren't on our work computer we will simply use the personal account's PAT token
   - This is also a good example of using an if and an else statement from the text language, allowing us to have traditional control flow
* {:Neovim/index:}[Neovim Configuration]
